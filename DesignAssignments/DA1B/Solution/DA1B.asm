; Author : Robert Sander
; Design Assignment 1B

.include<m328pdef.inc>

.ORG 0x00

	LDI R16, 99			;R16 = 99 (R16 FOR COUNTER)
	LDI R17,0x0B		;LOAD R17 WITH VALUE 0x0B
	LDI XL,LOW($200)	;LOAD THE LOW BYTE OF X WITH VALUE 0x00 - STARTING POSITION OF THE POPULATED NUMBERS
	LDI XH,HIGH($200)	;LOAD THE HIGH BYTE OF X WITH VALUE 0x2 - STARTING POSITION OF THE POPULATED NUMBERS
	LDI YL,LOW($400)	;LOAD THE LOW BYTE OF Y WITH VALUE 0x00 - FOR THE NUMBERS THAT ARE DIVISBLE BY THREE
	LDI YH,HIGH($400)	;LOAD THE HIGH BYTE OF Y WITH VALUE 0x4 - FOR THE NUMBERS THAT ARE DIVISBLE BY THREE
	LDI	ZL,LOW($600)	;LOAD THE LOW BYTE OF Z WITH VALUE 0x00 - FOR THE NUMBERS THAT ARE NOT DIVISBLE BY THREE
	LDI ZH,HIGH($600)	;LOAD THE HIGH BYTE OF Z WITH VALUE 0x6 - FOR THE NUMBERS THAT ARE NOT DIVISBLE BY THREE 
L1: 
	ST X+, R17	;COPY R17 TO MEMORY LOCATION X AND INCREMENTS THE LOCATION BY 1
	LDI R18, 0	;LOAD THE VALUE 0 INTO R18
	ADD R18, R17	;ADD R17 TO R18 AND STORE IN R18 - LINE 19
GREATERTHANTHREE:	
	SUBI R18, 3	;SUBTRACT 3 FROM R18 AND STORE THE RESULT IN R18
	CPI R18, 0	;COMPARE R18 WITH THE VALUE 0
	BRNE DONTSAVE	;IF R18 IS NOT EQUAL TO 0 GO TO 'DONTSAVE:'
	ST Y+, R17 ;COPY R17 TO MEMORY LOCATION Y AND INCREMENTS THE LOCATION BY 1 - FOR THE NUMBERS THAT ARE DIVISBLE BY THREE
DONTSAVE:
	CPI R18, 3 ;COMPARE R18 WITH THE VALUE 3
	BRGE GREATERTHANTHREE	;IF R18 IS GREATER THAN OR EQUAL TO 3 GO TO 'GREATERTHANTHREE:'
	CPI R18, 0 ;COMPARE R18 WITH THE VALUE 0
	BREQ SKIP ;IF R18 IS NOT EQUAL TO 0 GO TO 'SKIP:'
	ST Z+, R17 ;COPY R17 TO MEMORY LOCATION Z AND INCREMENTS THE LOCATION BY 1 - FOR THE NUMBERS THAT ARE NOT DIVISBLE BY THREE
SKIP:
	INC R17		;INCREMENTS R17 BY 1 EVERY LOOP, 99 TIMES
	DEC R16		;DECREMENT THE COUNTER BY 1
	BRNE L1		;LOOP UNTIL R16 (COUNTER) = ZERO

	LDI R20, 99	;R20 = 99 (R16 for counter)
	LDI R16, 0	;LOAD THE VALUE 0 INTO R16
	LDI R17, 0	;LOAD THE VALUE 0 INTO R17
	LDI R18, 0	;LOAD THE VALUE 0 INTO R18
	LDI R19, 0	;LOAD THE VALUE 0 INTO R19
	CLC	;CLEAR THE CARRY FLAG
L2:
	LD R21, -Y	;LOAD VALUE AT ADDRESS Y INTO R21 AND DECREMENT Y BY 1
	ADC R16, R21	;ADD WITH CARRY R21 AND R16 AND STORE THE RESULT IN R16
	BRCC NOCARRY_Y	;IF CARRY FLAG IS CLEAR GO TO 'NOCARRY_Y:'
	INC R17	;INCREMENT R17 BY 1 IF CARRY IS NOT CLEAR
NOCARRY_Y:
	CLC	;CLEAR THE CARRY FLAG
		LD R22, -Z	;LOAD VALUE AT ADDRESS Z INTO R22 AND DECREMENT Z BY 1
	ADC R18, R22	;ADD WITH CARRY R22 AND R18 AND STORE THE RESULT IN R18
	BRCC NOCARRY_Z	;IF CARRY FLAG IS CLEAR GO TO 'NOCARRY_Z:'
	INC R19	;INCREMENT R19 BY 1 IF CARRY IS NOT CLEAR
NOCARRY_Z:
	CLC	;CLEAR THE CARRY FLAG
	DEC R20	;DECREMENT THE COUNTER BY 1
	BRNE L2
	
END: RJMP END

;TO CHECK IF DIVISIBLE BY THREE
;SUBTRACT 3 UNTIL NUMBER EQUALS ZERO, IF THERE IS A REMAINDER AFTER IT GOES TO ZERO THEN NUMBER IS NOT DIVISIBLE BY THREE
;STORE IN 0x0600
;IF NO REMAINDER, NUMBER IS DIVISBLE BY THREE
;STORE IN 0x0400
